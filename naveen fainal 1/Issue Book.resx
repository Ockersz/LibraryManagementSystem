<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAdcAAAHXAYySCGgAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAPvklEQVR4XtWbCVQVZ5bH6aT7TJ909zmZSc+cM6ejnUnSakYdZUnYBQSNEdFxQZYYYqNJ1IhGQImg
        gIAge1jEDdmMRo2KLA9QVFZBo4CIiChg2oRREFRE4VW95c73FfUeVfXug4fGTnLP+Z3zeO/77nf/t761
        qjD6OczYJc3HemlGvo17Vh/PCRv3THv+Z87glp0ltNnXQrvTeP6rX7l9uud30+emRE+dnfDEdF4aENG6
        uGU1ELzs7ct+C+32XxIA2h0W8R5+nfbewtTXps9JOTDVKZH975lxMNkpnojN1BUvwNo963ZZ3scFv+oE
        vOuyd7Kxc2r1ZMcENRWuwXhuCipayu5dfkS8PaSkBZRYumb/hXf7y7d3PTJdTBfu+XGyY7xWtBBTFz3d
        X4ImAUHhYWDrma2a9fnJ6llr88z4Zn55Zr08e6PJ/+7ux0QLMXHeiQqWIkyA9nuPLJjtk9cx10fmwTf7
        M1to6G/fXbwviUxu3Pg2hCmzEugYF4nFQBMgwPHTb+87eh/7nE6YfDT/PJtun/jq9A9SsqfOTlRgIkfD
        ZF4qKkrIaAnQYO91sMfWPWeDqcueV/jwXqwZO6f5kJlchQkbC8bOKWDtpn81MDQBGmw9srttPHJs+DBf
        nE2bkzSACRqJd+xjYaLtDvibdSS8bbWdEAFvW2+Hac7JYO6eAe+5poO56/4hFqeDxeJ9sCvNd0wJoNgt
        P3SVD/PFmH8Vs9CEzOKYSBEOsTDBJgresgiD8cZb4fX/CRQx3ngLvOMQg9flSYhdxSUgYFsoWCxJN2je
        mOtXpPKvZNz5cH9a86ti1/hVMaoPdzfD1PeT0KApE8iVpgKlooX8l1kIWleIJgHr/P25v6c5p4LF0gxU
        OMXps2OwOvce0Bh9K9nVfNg/jflWMsuIYzWBNgAbygbAJbgMppOghEFPtI0iAoN0BEt5wyxUVA9DmgAO
        xziwJMNEKPx9n3xYnnETfCvkXGw8av8q9u98+M9nvlXyecShQuBchHtyA5gt2sMFSMc4JljKMyeAYOE2
        1As+2CAD7wMdaEw8rF+1/ANexrPZhhr528RRn8Qxitf+mzB5VjwqWMrzJMDx81xYfbIbjQHh8aZq+URe
        ztjMpwj+xbeKqUOc6sVq+UFUsJTnScCi6Ato2yPQGFoGv+dlGW5k0ovTOCGzP/hX6zjWweAEmI48CU52
        jAXZbleA8xawM8Jb9JshCaCx0pgF30XzsgyzqMvy2ZGXGWXiVQZ2XWdg340h9rQwQL8LuiByrsXQBIyb
        FgiT7KJFwoTsCvICKDQBuDEDoMEaNq7x0f6mLwGBNQwkkNh2kxg18e7i442sY1ThdfI5vLxRDOA3SU3M
        Q40TjL2ELUgS9CXgr2RZnGYTDE4fBMPihVvBy2MbbPgsCo7GxcERQlpIDMRsjoWAdTHw6Ypo+PGgHUmA
        KcB1W4B6ayhPdhkxAfSC7BUIx0i+xvbyCke2yAa5P+ZASuo1cRAUTQLGTQuCqZaBEP3FZri+ZwMoj/uI
        YGXhwJxO1ItK5gxQQHoAT274ApjipD8B5IKhMUqJaWDX8zL1W3IT8wirLIX2gk2SecHCKwcmWYZAkqsD
        ZLlbgPzYFzriuQSUxKHCNbCntgHIzDjxapk5fPOxBexZagtm9kHgElouapOO99GuvoaUa+wDXiZuO+rY
        T7CK+pAOg9mbSsDcfC0n/uSauah4RX4gKloKlFpxCVCdc4SD3k6cT0szT7DyPiBqk459LDZ9xFxhvXm5
        ukYmkWaskj5CvxMnYK3sAZjOiuCC7UjXc/VH6f4auAQUm4GaJKB4+wbOp6mZN6w8ckfUZjC5CFhs+khs
        ZJp4uWIja+UfyQyqxirpI+KyOAGU9JILIAtZAfLjumOfwhRHoYKlqOvncfsA1UVXuH04GvI2L4OMY0U6
        7YVdwmPTx+7rjHpTNfyJlz1sMVeYbViFkdhRLw4mpuwfoDi+jgil6IqnsIYmoHnxUAIavLi/aV3qO6b8
        B1GbUXV4bCMRUz8YzMsetq+uso1Y4ZGIbxQnIL6sQyAWTwIrC9MRi6G66sklQHn5Exg4naStH1d2W9Rm
        7BU8tpFIbGIaeNnDltrMDGCFR0K6FG6sHIT+b9aD8vBqYHL9RMI1KAqDUcE6nI0BRY0/MKVx0HtqF/G5
        CvqO+MHGqkFRmykGLoFCSNxPedlDFnoZ/mzoUiKE1pFsOaHjcBio9nwI8twAPAEGrgJCeoqTOJ8dh8NF
        bVHo7hSLbSRo3KE18G+8fDL+G1kvrKAhbKkVB5RfWMAFO5C7GU/AyY2oyJF4mL+D80l9C9v6coxLoJAd
        DYwnL59OgOwurJAhkH22KKjNFY9hMIOM2+N4D1CSoYGJHIm+E6EwQHxurugXtUVXISwmQ4hrkKfy8o2M
        yERSiBUyBLJzFAVFCah6Cg3FB9AEKHK/QEWORO65i5xPaTv0oIPFZAhEcz4v38go/oq8GitkKAHIUTm/
        9ByaAApzKh4Vqo+0Ct07PxvHsAXGiG9kK3n5RkaJz7AECtkuGQaUyPJ7RKyepbBoOyoUQ176FWypfKzj
        P/w5uj+FaL7CyycJaJS3YoUMZWczfsPkyckgNAGK/CBULEbLmaM6fikpZAnGYjEUqpmXTxPAXsUKjYUQ
        ybmAcvHUYTQBtGcYOgy+Kbui43frGPf/GIlNgh6Q0MhcxAqNBeJDJ9CgqsfA5voiCSC9oGD0DVFXaTps
        qhzQ8Rv3DLs/KSTeWl4+NwkWYIXGAjlk6ARKOXW6BE2A8vh6cu6PRYVr2F9+A/WZRoYcFsNYiGuU5/Hy
        yT6gXh6HFRoLdB7AgqV0kY0MmoSTZKuLCKfUntU9+WmgSy8Ww1iIrWd28PLJPqCRcccKjYVI5GisoSov
        hwwFfzQJirwAMh8kiMT3lnwFB0ovor4oz7sCUGIaGFdePk0A/OFZ9tQa6KlQeiYQ0nokmmxllwF7Ql8S
        vtQm4UFxAvluHRSVyFBfFLrikOM7Gosh7G2RAzn/iN8n2HmNeYwVHgl6Ggy5iAepYct5Bh4dDeH28hTl
        obWg4BIh3iMM0qUxL1D7d0vRXggkdTGfGujdoORnWA7JybePlz1s8VfZ81hhDCqc3onBghISRg5Kze0K
        Agt9sjRtEjgyvLlzgfIk4YT49pm8OALud/VDe7cSgmtZ1LcG2vPorbmxJCK+UV7Fyx62mAZ2JVZYA33g
        ENtA1uBRrriGwMpBuNYuh6Y2BQdNwuOClOEE5KwUidbAFG0j4h9B10PgaO4cJFtt0ZNfvdCTKRnb3IqE
        adAQXYc8OXYFeJlksje6fuguCx3X0cQZPXHRBw+GPBqjJJfWQsvhxaBK+wN0VmdpE6BJwpNccrTd9xEo
        j63VFV8YDD13e7XiKb13mqGvaC5UnY6C+PJraJtSaK8IJMmIIL2U3raj+waqiX4mPbeHauVli41UjMAc
        jsbW8i6oyA2Ep/v+ApBkpEW96xW4cf0foiTcuj0A8vxgHfFsQSD0dN4Tie/ueQryUwtED0nuFS2GwjPp
        EFLJvQwxdqqZbbxcXfOtGBhHCil1KunhYPE30JVtBpD8ski4EDZ7olZ8R6eKE3b/hy548vmn8GTViiFW
        r4Se23dE4ilPawJE4oUoC82hucQHcs4VwybkqKwHxaaygdd5ubiRXnAUqaglvaIcbh+aDaqdr6CCMR4W
        roKWDqVW2N0eFdx75UO4Z7RkiJdcobNbIRL/qCUXFY7RL3OE86e3Q0ptPRqzgEO8TP3mWyWfQArqvBFS
        Vp0EA2ccuIeW6m//BurU36FiUZJfgq5rZVpxLd9eHRbP05J+Qft7b2c7ucJDT4YMYUBmB/11Q88Rfryx
        EjIvlYli51H61TCTeJkjGxknmcLKpdVpug3nTQPl/j/jgjUQ4bD/NYBvJ8BgqSt09w7CD11qqEuo0UlA
        fWQF3CG/dfcyMHjGXbc9PfSemQ/qVvpWuZj0S1VC8UAubDovb3TbfBFe86uS39dULq9OQBunqA6/BZAi
        mQN2kt7x9TiA/Omisr2126HqshzOXRiE773T4IFLAMf3K9K47yovyaGnJkJURx9MoTX0fTdfR7iGrEvn
        hhNQyfT4VMK/8/IMM99KdrnGwZyAUyDbuRDUMlM0GMidCqq9r5Ir/huAnP8kwo3xcoRL5fmcWMWSNQAO
        ZEEi0M/0u+/Ki9E6Uh6cmgfKFjIcEeEDN+fCzowI8No3fJL0rWK9eFljM5K5rxdG1cLr04ZedHByXg+d
        J2eiQUGJGfSVOQFbaIn/zjNYaAd1sosAM5cOJWC5P6jXh8OFc60wUEhEIHU0KAvMobdmIUCbrnDK5cpV
        sOizodfxbT2y4ZPD3IPUI7ycsRt9iDhxxg5G+LYHJdR3ObAl5mptcPRtjmZbLghl80xVf4mTXBi4lKfH
        5rLguARgwQqADZEAvtvhUd6SEev0FzvKFc2OKqloSlfTIsY/LFohfH+Q8v66/G70QehYbKpjouV4k61K
        aRLeNvsSzu6ep1RT8ZXm4qDa7ACqzDtI4EqpEA2qmPkMvfo0AfKsFY+xMjxK4usm51PYBkHVZj949OvV
        dxyWoW+Qdtq7Z77By3g+m2QX4zFu+ha1NAkUZ5d10Jw/r1saHEeTTT/ITO8hojjYQ4sesUcWPcR+45CZ
        3oUm20eY7/bzC1tdV6eyiHBKn5Vn5nQ+/J/GptjFfTTeeItKmoC3zMPBxi0T/LZG9jy+Nvv/dIK9Ragg
        V7DAZHjIGELZezfhlu5Vf9ridDcwLLwbEc1h657VY+WRbcmH/dPaZPuoOW+YBrPCBJjMG/4XGHvPDDiY
        ubZd3eYglwYOV2wekLmiBxUrpNDkATTY3JfWpz6PH/ysbeYy8bvCEjps3LIn8OG+GJvilPjOm+9te0DF
        07fB6NWXBuK2JoVtq1l0SyoCbtqp4Sy5sphwypl3b8DNGToT3fcXFtxeti5JX3cfwi2zxOqjnP/gw3zR
        dvTlSTY7TrxpHqZGg+HZErGt5+l1J52rCQ3W98iV7hOI74dLlnel5ZhWx56Y+MD7mG8BJDGZoUahoS/x
        wf3zzHj+7hnW7tlnkaC0OHmlQ+GRT9rUbXasSGDrDAVUWtwitHGfBb/RsrQOrYv5FHDGyi1nCh/Oz2fW
        7lnzSTAtkuBEeK5NHvy+dkGbUCjGj9/Nv+21PlGO+RDQYuOR6cI3/wsx0gVtlmY72XhkHyUBKiUBa9ka
        EXJX3uqks2wqWh174xI3d9p66P1HKpWNR1YpGeuurq5H8Ts6vxSzcst6y9YtcyMJuoygu0P7eB+czvW+
        pbrlIKfQz/Q7aTkCrVtGepi/jWfGm7z7X5fZeB78V5KQ2VSErXtmFhFUS7hJ6JrhmSmn0M/8d7W0DC1L
        69gvz3yVd/OCzMjo/wG/HQm8FkWXkwAAAABJRU5ErkJggg==
</value>
  </data>
</root>